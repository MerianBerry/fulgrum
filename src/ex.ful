
-- Private variable of this module.
var myVar = "Hello Mundo!"

pub func myCallback(arg: int) => void = null
pub var myVarCallback: ?(int) => void = null

-* Public symbols implicitly included through import.
 * Does not need to be in `package` in order to be imported.
 * Publicly availible to any clients of the module 
 * importing this module.
*-
pub const func myFunc(arg: string) => string {
  myVar += arg
  if !myCallback {
    myCallback(myVar.length())
  }
  if !myVarCallback {
    myVarCallback(myVar.length())
  }
  return myVar
}

-* Package is exported through the import keyword in the client
 * code. Package is more or less a class. Client code can use
 * `importedModule.package` to use the "type".
 * Import returns a value of this modules package type, containing
 * the values of the functions and variables. (Yes the functions)
 * in packages have values, unless marked with const.
*-
package {
  const func myPackageFunc(arg: string) => string {
    myVar += arg
    if !myCallback {
      myCallback(myVar.length())
    }
    if !myVarCallback {
      myVarCallback(myVar.length())
    }
    return myVar
  }
}

-- Success
print("Startup yeah!\n")
return 0
